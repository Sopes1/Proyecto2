# Configuraciones

	## Creacion Cluster
	gcloud container clusters create proyecto2 --num-nodes=1 --tags=allin,allout --machine-type=n1-standard-2 --no-enable-network-policy
	
	
	## Ingress
	
	kubectl create ns nginx-ingress
	helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx 
	helm repo update 
	helm install nginx-ingress ingress-nginx/ingress-nginx -n nginx-ingress
	kubectl get services -n nginx-ingress
	
	## Install Linkerd
	
	##curl -fsL https://run.linkerd.io/install | sh
	##nano ~/.bashrc <- export PATH=$PATH:/home/YOUR_USER/.linkerd2/bin

	linkerd install | kubectl apply -f -
	linkerd check
	linkerd viz install | kubectl apply -f -
	linkerd check
	
	## Instalacion Ingress
	kubectl get deployment nginx-ingress-ingress-nginx-controller -n nginx-ingress  -o yaml | linkerd inject - | kubectl apply -f -
	
	## Check pods
	kubectl get pods -n nginx-ingress
	
	## Get Load Balancer IP
	kubectl get svc -n nginx-ingress
	
	## Crear Archivo .yaml
	kubectl create ns squidgame -o yaml --dry-run > squidgame.yaml
	
	## Aplicar archivo
	kubectl apply -f squidgame.yaml
	
	## Crear deployment
	kubectl create deployment [nombreDeployment] -n squidgame --image=[dockerImage] --replicas=[numero] --dry-run -o yaml >> squidgame.yaml
	
	## Aplicar cambios
	kubectl apply -f squidgame.yaml
	
	## Crear el service para deployment 
	kubectl expose deployment [nombreDeployment] -n squidgame --type=ClusterIP --port=[puerto] --dry-run -o yaml >> squidgame.yaml
	
	## Poner el ingress
	1. Copiar la parte que tiene apiVersion: networking.k8s.io/v1
	2. Ver la ip del ingress: kubectl get svc -n nginx-ingress
	3. Cambiar el host por ip.nip.io
	4. Cambiar el nombre del service al que nosotros pusimos
	5. Cambiar el puerto para el que nosotros pusimos en el service
	6. Cambiar el path por "/[nombreDeployment]"
	7. Poner namespace: squidgame en la parte de metadata
	
	## Aplicar cambios
	kubectl apply -f squidgame.yaml
	
	## Ver ingress en el namespace squidgame
	
	## CHAOS MESH
	
	# Descargar chaos mesh una vez 
	#curl -sSL https://mirrors.chaos-mesh.org/v2.0.3/install.sh | bash
	
	# Abir el dashboard
	kubectl port-forward -n chaos-testing svc/chaos-dashboard 2333:2333
	
	# Aplicar experimento
	kubectl apply -f pod-experiments.yaml
	
	# Eliminar experimento
	kubectl delete -f pod-experiments.yaml
	

$$ Despues de cada comando introducido al archivo se le ponen 3 rayitas --- para seguir escribiendo y separar los comandos

## Ver proyecto actual
gcloud config get-value project
	
# Borrar Cluster
gcloud container clusters delete [CLUSTER_NAME]

# Regresar cambios de kubectl
kubectl delete -f squidgame.yaml

# Ver namespaces
kubectl get ns

# Ver deployments en el namespace squidgame
kubectl get deployments -n squidgame

# Ver que tiene el deployment myapp en el namespace squidgame
kubectl describe deployments myapp -n squidgame

# Ver informacion de pods en el namespace squidgame
kubectl get pods -n squidgame

# Ver que hay dentro de un pod
kubectl describe pods [nombrePod] -n squidgame

# Abrir consola Ingress
linkerd viz dashboard 


	
