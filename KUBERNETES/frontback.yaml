apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: squidgame
spec: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: backend
  name: backend
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: backend
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - image: cristianhp2020/api_squid_game
        name: backend
        env:
          - name: redisURL_
            value: '35.224.94.57'
          - name: redisPort_
            value: '6379'
          - name: mongoURL_
            value: 'mongodb://mongo_admin:SopesP2_2021@35.202.121.215:27017/admin'
        ports:
          - containerPort: 8080
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
  namespace: squidgame
spec:
  type: LoadBalancer
  selector:
    app: backend
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  externalTrafficPolicy: Local

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: fronted
  name: frontend
  namespace: squidgame
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: frontend
      annotations:
        linkerd.io/inject: enabled
    spec:
      hostname: frontend-pod-host
      containers:
      - image: cristianhp2020/squid_game:latest
        name: frontend
        env:
          - name: REACT_APP_API_URL
            value: http://35.239.170.152:8080
        ports:
          - containerPort: 3000
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: squidgame
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP

# ---

# apiVersion: networking.k8s.io/v1 
# kind: Ingress 
# metadata: 
#   name: minimal-ingress 
#   annotations: 
#     kubernetes.io/ingress.class: nginx 
#     nginx.ingress.kubernetes.io/rewrite-target: / 
#     nginx.ingress.kubernetes.io/service-upstream: "true"
#     nginx.ingress.kubernetes.io/websocket-services: "backend"
#     nginx.ingress.kubernetes.io/service-upstream: "true"
#     nginx.ingress.kubernetes.io/ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/use-regex: "true"
#   namespace: squidgame
# spec: 
#   rules: 
#   - host: 35.222.183.224.nip.io
#     http: 
#       paths: 
#       - path: /
#         pathType: Prefix 
#         backend: 
#           service: 
#             name: frontend
#             port: 
#               number: 3000